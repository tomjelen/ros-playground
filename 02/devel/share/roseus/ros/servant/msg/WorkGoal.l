;; Auto-generated. Do not edit!


(when (boundp 'servant::WorkGoal)
  (if (not (find-package "SERVANT"))
    (make-package "SERVANT"))
  (shadow 'WorkGoal (find-package "SERVANT")))
(unless (find-package "SERVANT::WORKGOAL")
  (make-package "SERVANT::WORKGOAL"))

(in-package "ROS")
;;//! \htmlinclude WorkGoal.msg.html


(defclass servant::WorkGoal
  :super ros::object
  :slots (_task_name _difficulty ))

(defmethod servant::WorkGoal
  (:init
   (&key
    ((:task_name __task_name) "")
    ((:difficulty __difficulty) 0)
    )
   (send-super :init)
   (setq _task_name (string __task_name))
   (setq _difficulty (round __difficulty))
   self)
  (:task_name
   (&optional __task_name)
   (if __task_name (setq _task_name __task_name)) _task_name)
  (:difficulty
   (&optional __difficulty)
   (if __difficulty (setq _difficulty __difficulty)) _difficulty)
  (:serialization-length
   ()
   (+
    ;; string _task_name
    4 (length _task_name)
    ;; int32 _difficulty
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; string _task_name
       (write-long (length _task_name) s) (princ _task_name s)
     ;; int32 _difficulty
       (write-long _difficulty s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; string _task_name
     (let (n) (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4) (setq _task_name (subseq buf ptr- (+ ptr- n))) (incf ptr- n))
   ;; int32 _difficulty
     (setq _difficulty (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get servant::WorkGoal :md5sum-) "5ba6e9bcf0af82e72e9356429c403f0c")
(setf (get servant::WorkGoal :datatype-) "servant/WorkGoal")
(setf (get servant::WorkGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
string task_name
int32 difficulty

")



(provide :servant/WorkGoal "5ba6e9bcf0af82e72e9356429c403f0c")


